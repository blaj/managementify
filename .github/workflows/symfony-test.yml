name: Symfony tests

on:
  push:
  pull_request:
    branches: [ "main", "develop" ]

permissions:
  contents: read

jobs:
  symfony-tests:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: db
          POSTGRES_PASSWORD: db
          POSTGRES_DB: db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, dom, filter, gd, iconv, json, mbstring, pdo

      - name: Checkout
        uses: actions/checkout@v3

      - name: Copy .env.test.local
        run: php -r "file_exists('.env.test.local') || copy('.env.test', '.env.test.local');"

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      - name: Install dependencies
        run: yarn --frozen-lockfile

      - name: Create Database
        run: |
          PGPASSWORD=db psql -U db -h localhost -a -f ci-database-init.sql

      - name: Run PHPStan analyse
        run: vendor/bin/phpstan analyse --memory-limit 2G -c ./phpstan/phpstan.neon

      - name: Execute tests (Unit and Feature tests) via PHPUnit
        run: vendor/bin/phpunit
